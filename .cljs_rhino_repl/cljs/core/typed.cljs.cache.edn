;; Analyzed by ClojureScript 1.7.58
{:name cljs.core.typed, :doc "Internal functions for CLJS", :excludes #{IFn}, :use-macros nil, :require-macros {boot clojure.core.typed.bootstrap-cljs, clojure.core.typed.bootstrap-cljs clojure.core.typed.bootstrap-cljs}, :uses nil, :requires nil, :imports nil, :defs {NilableNonEmptyASeq {:name cljs.core.typed/NilableNonEmptyASeq, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Object {:name cljs.core.typed/Object, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, ann-datatype* {:protocol-inline nil, :meta {:file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 20, :column 3, :end-line 20, :end-column 16, :skip-wiki true, :arglists (quote ([vbnd dname fields opts])), :doc "Internal use only. Use ann-datatype."}, :name cljs.core.typed/ann-datatype*, :variadic false, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :end-column 16, :method-params ([vbnd dname fields opts]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 19, :end-line 20, :max-fixed-arity 4, :fn-var true, :arglists (quote ([vbnd dname fields opts])), :doc "Internal use only. Use ann-datatype."}, U {:name cljs.core.typed/U, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Sequential {:name cljs.core.typed/Sequential, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, ann-protocol* {:protocol-inline nil, :meta {:file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 14, :column 3, :end-line 14, :end-column 16, :skip-wiki true, :arglists (quote ([vbnd varsym mth])), :doc "Internal use only. Use ann-protocol."}, :name cljs.core.typed/ann-protocol*, :variadic false, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :end-column 16, :method-params ([vbnd varsym mth]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 13, :end-line 14, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vbnd varsym mth])), :doc "Internal use only. Use ann-protocol."}, String {:name cljs.core.typed/String, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Bool {:name cljs.core.typed/Bool, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, EmptyCount {:name cljs.core.typed/EmptyCount, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Array {:name cljs.core.typed/Array, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Collection {:name cljs.core.typed/Collection, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, NonEmptyColl {:name cljs.core.typed/NonEmptyColl, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Seqable {:name cljs.core.typed/Seqable, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, I {:name cljs.core.typed/I, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Reversible {:name cljs.core.typed/Reversible, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Pred {:name cljs.core.typed/Pred, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Vec {:name cljs.core.typed/Vec, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, IPersistentVector {:name cljs.core.typed/IPersistentVector, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Stack {:name cljs.core.typed/Stack, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Num {:name cljs.core.typed/Num, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, All {:name cljs.core.typed/All, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Option {:name cljs.core.typed/Option, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Any {:name cljs.core.typed/Any, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Atom2 {:name cljs.core.typed/Atom2, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Str {:name cljs.core.typed/Str, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, ReadOnlyArray {:name cljs.core.typed/ReadOnlyArray, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Map {:name cljs.core.typed/Map, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, NonEmptyAVec {:name cljs.core.typed/NonEmptyAVec, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, def-alias* {:protocol-inline nil, :meta {:file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 26, :column 3, :end-line 26, :end-column 13, :skip-wiki true, :arglists (quote ([sym type])), :doc "Internal use only. Use def-alias."}, :name cljs.core.typed/def-alias*, :variadic false, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :end-column 13, :method-params ([sym type]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 25, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sym type])), :doc "Internal use only. Use def-alias."}, inst-poly {:protocol-inline nil, :meta {:file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 32, :column 3, :end-line 32, :end-column 12, :skip-wiki true, :arglists (quote ([inst-of types-syn])), :doc "Internal use only. Use inst."}, :name cljs.core.typed/inst-poly, :variadic false, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :end-column 12, :method-params ([inst-of types-syn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 31, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([inst-of types-syn])), :doc "Internal use only. Use inst."}, Set {:name cljs.core.typed/Set, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Nilable {:name cljs.core.typed/Nilable, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, TFn {:name cljs.core.typed/TFn, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Associative {:name cljs.core.typed/Associative, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Boolean {:name cljs.core.typed/Boolean, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, loop>-ann {:protocol-inline nil, :meta {:file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 38, :column 3, :end-line 38, :end-column 12, :skip-wiki true, :arglists (quote ([loop-of bnding-types])), :doc "Internal use only. Use loop>"}, :name cljs.core.typed/loop>-ann, :variadic false, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :end-column 12, :method-params ([loop-of bnding-types]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 37, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([loop-of bnding-types])), :doc "Internal use only. Use loop>"}, NonEmptyASeq {:name cljs.core.typed/NonEmptyASeq, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Integer {:name cljs.core.typed/Integer, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Seq {:name cljs.core.typed/Seq, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, NonEmptyCount {:name cljs.core.typed/NonEmptyCount, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Atom1 {:name cljs.core.typed/Atom1, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Number {:name cljs.core.typed/Number, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, NonEmptySeqable {:name cljs.core.typed/NonEmptySeqable, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, AVec {:name cljs.core.typed/AVec, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, HSequential {:name cljs.core.typed/HSequential, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, IFn {:name cljs.core.typed/IFn, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, IPersistentSet {:name cljs.core.typed/IPersistentSet, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, typed-deps* {:protocol-inline nil, :meta {:file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 44, :column 3, :end-line 44, :end-column 14, :skip-wiki true, :arglists (quote ([args])), :doc "Internal use only. Use typed-deps."}, :name cljs.core.typed/typed-deps*, :variadic false, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :end-column 14, :method-params ([args]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 43, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([args])), :doc "Internal use only. Use typed-deps."}, Coll {:name cljs.core.typed/Coll, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, APersistentMap {:name cljs.core.typed/APersistentMap, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, Int {:name cljs.core.typed/Int, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, AnyInteger {:name cljs.core.typed/AnyInteger, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, ann* {:protocol-inline nil, :meta {:file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 8, :column 3, :end-line 8, :end-column 7, :skip-wiki true, :arglists (quote ([varsym typesyn])), :doc "Internal use only. Use ann."}, :name cljs.core.typed/ann*, :variadic false, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :end-column 7, :method-params ([varsym typesyn]), :protocol-impl nil, :skip-wiki true, :arglists-meta (nil nil), :column 1, :line 7, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([varsym typesyn])), :doc "Internal use only. Use ann."}, NonEmptySeq {:name cljs.core.typed/NonEmptySeq, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, IPersistentMap {:name cljs.core.typed/IPersistentMap, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, PersistentList {:name cljs.core.typed/PersistentList, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}, EmptySeqable {:name cljs.core.typed/EmptySeqable, :meta {:file nil}, :file "file:/C:/Users/Kaylen/.m2/repository/org/clojure/core.typed.rt/0.3.14/core.typed.rt-0.3.14.jar!/cljs/core/typed.cljs", :line 50, :column 1}}}