;; Analyzed by ClojureScript 1.7.58
{:use-macros {ann cljs.core.typed, def-alias cljs.core.typed}, :excludes #{}, :name guymover.game-state, :imports nil, :requires {u guymover.util, guymover.util guymover.util, t cljs.core.typed, cljs.core.typed cljs.core.typed}, :uses nil, :defs {Uuid {:name guymover.game-state/Uuid, :file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 23, :column 10, :end-line 23, :end-column 25, :meta {:file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 23, :column 21, :end-line 23, :end-column 25}}, Point {:name guymover.game-state/Point, :file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 25, :column 1, :end-line 25, :end-column 17, :meta {:file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 25, :column 12, :end-line 25, :end-column 17}}, Color {:name guymover.game-state/Color, :file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 29, :column 1, :end-line 29, :end-column 17, :meta {:file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 29, :column 12, :end-line 29, :end-column 17}}, Guy {:name guymover.game-state/Guy, :file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 33, :column 1, :end-line 33, :end-column 15, :meta {:file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 33, :column 12, :end-line 33, :end-column 15}}, Board {:name guymover.game-state/Board, :file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 39, :column 1, :end-line 39, :end-column 17, :meta {:file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 39, :column 12, :end-line 39, :end-column 17}}, extracells {:name guymover.game-state/extracells, :file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 47, :column 1, :end-line 47, :end-column 16, :meta {:file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 47, :column 6, :end-line 47, :end-column 16}, :doc "Add this to the number of players\n  to get the board size."}, add-guy {:protocol-inline nil, :meta {:file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :line 52, :column 7, :end-line 52, :end-column 14, :arglists (quote ([{:keys [dims guys], :as board, :or {dims [extracells extracells], guys {}}} guy-name guy-id])), :doc "Add a guy and return the board."}, :name guymover.game-state/add-guy, :variadic false, :file "c:\\Users\\Kaylen\\git\\guymover\\src\\guymover\\game_state.cljc", :end-column 14, :method-params ([p__35247 guy-name guy-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [dims guys], :as board, :or {dims [extracells extracells], guys {}}} guy-name guy-id])), :doc "Add a guy and return the board."}}, :require-macros {t cljs.core.typed, cljs.core.typed cljs.core.typed}, :cljs.analyzer/constants {:seen #{:mandatory t/Str :color Color t/Int :name Board Guy Uuid t/Map not :id Point :dims :position :guys t/HMap t/Any t/HVec extracells guy-name cljs.core/UUID guys}, :order [Uuid cljs.core/UUID Point t/HVec t/Int Color Guy t/HMap :mandatory :name :color t/Str Board :dims :guys t/Map t/Any extracells not guys guy-name :id :position]}, :doc "Defines the game board and state."}